haXe File
  PsiComment(#if)('#if')
  PsiComment(PPEXPRESSION)(' flash8\n')
  PsiComment(PPBODY)('// Haxe code specific for flash player 8\n#elseif')
  PsiComment(PPEXPRESSION)(' flash\n')
  PsiComment(PPBODY)('// Haxe code specific for flash platform (any version)\n#elseif')
  PsiComment(PPEXPRESSION)(' js\n')
  PsiComment(PPBODY)('// Haxe code specific for javascript plaform\n#else')
  PsiComment(PPEXPRESSION)('\n')
  PsiComment(MSL_COMMENT)('// do something else')
  PsiComment(#error)('#error // will display an error "Not implemented on this platform"\n  #error "Custom error message" ')
  PsiComment(MSL_COMMENT)('// will display an error "Custom error message"')
  PsiComment(#end)('#end')
  PsiComment(#if)('#if')
  PsiComment(PPEXPRESSION)(' mydebug\n')
  HAXE_CLASS_DECLARATION
    PsiElement(class)('class')
    HAXE_COMPONENT_NAME
      HAXE_IDENTIFIER
        PsiElement(ID)('Crazy')
    PsiElement({)('{')
    PsiComment(#else)('#else\n  interface Crazy {\n  #end')
    PsiComment(MSL_COMMENT)('// yep')
    HAXE_CLASS_BODY
      <empty list>
    PsiElement(})('}')
  HAXE_CLASS_DECLARATION
    PsiElement(class)('class')
    HAXE_COMPONENT_NAME
      HAXE_IDENTIFIER
        PsiElement(ID)('ConditionalCompilation')
    PsiElement({)('{')
    PsiComment(#if)('#if')
    PsiComment(PPEXPRESSION)(' !debug ')
    HAXE_CLASS_BODY
      HAXE_FUNCTION_DECLARATION_WITH_ATTRIBUTES
        HAXE_DECLARATION_ATTRIBUTE_LIST
          HAXE_DECLARATION_ATTRIBUTE
            PsiElement(inline)('inline')
          PsiComment(#end)('#end')
          HAXE_DECLARATION_ATTRIBUTE
            HAXE_ACCESS
              PsiElement(public)('public')
        PsiElement(function)('function')
        HAXE_COMPONENT_NAME
          HAXE_IDENTIFIER
            PsiElement(ID)('abc')
        PsiElement(()('(')
        PsiElement())(')')
        HAXE_BLOCK_STATEMENT
          PsiElement({)('{')
          PsiElement(})('}')
    PsiElement(})('}')
  PsiComment(#if)('#if')
  PsiComment(PPEXPRESSION)(' (neko && mydebug)\n')
  HAXE_CLASS_DECLARATION
    PsiElement(class)('class')
    HAXE_COMPONENT_NAME
      HAXE_IDENTIFIER
        PsiElement(ID)('FooNeko')
    PsiElement({)('{')
    HAXE_CLASS_BODY
      <empty list>
    PsiElement(})('}')
  PsiComment(MSL_COMMENT)('// Only for "mydebug" mode on Neko')
  PsiComment(#end)('#end')
  PsiComment(#if)('#if')
  PsiComment(PPEXPRESSION)(' (flash || php)\n')
  PsiComment(PPBODY)('// Code that works for either flash or PHP\nclass FooFlash {\n\n}\n#end')
  PsiComment(PPEXPRESSION)('\n\n')
  PsiComment(#if)('#if')
  PsiComment(PPEXPRESSION)(' (neko && mydebug)\n')
  HAXE_TYPEDEF_DECLARATION
    PsiElement(typedef)('typedef')
    HAXE_COMPONENT_NAME
      HAXE_IDENTIFIER
        PsiElement(ID)('Vector')
    PsiElement(=)('=')
    HAXE_TYPE_OR_ANONYMOUS
      HAXE_TYPE
        HAXE_REFERENCE_EXPRESSION
          HAXE_REFERENCE_EXPRESSION
            HAXE_REFERENCE_EXPRESSION
              HAXE_IDENTIFIER
                PsiElement(ID)('com')
            PsiElement(.)('.')
            HAXE_REFERENCE_EXPRESSION
              HAXE_IDENTIFIER
                PsiElement(ID)('foo')
          PsiElement(.)('.')
          HAXE_REFERENCE_EXPRESSION
            HAXE_IDENTIFIER
              PsiElement(ID)('SuperArray')
    PsiElement(;)(';')
  PsiComment(MSL_COMMENT)('// Only for "mydebug" mode on Neko')
  PsiComment(#end)('#end')
  HAXE_CLASS_DECLARATION
    PsiElement(class)('class')
    HAXE_COMPONENT_NAME
      HAXE_IDENTIFIER
        PsiElement(ID)('ConditionalCompilation')
    PsiElement({)('{')
    HAXE_CLASS_BODY
      HAXE_FUNCTION_DECLARATION_WITH_ATTRIBUTES
        PsiElement(function)('function')
        HAXE_COMPONENT_NAME
          HAXE_IDENTIFIER
            PsiElement(ID)('foo')
        PsiElement(()('(')
        PsiElement())(')')
        HAXE_BLOCK_STATEMENT
          PsiElement({)('{')
          PsiComment(#if)('#if')
          PsiComment(PPEXPRESSION)(' (neko && php) || (neko && mydebug)\n    ')
          HAXE_CALL_EXPRESSION
            HAXE_REFERENCE_EXPRESSION
              HAXE_IDENTIFIER
                PsiElement(ID)('trace')
            PsiElement(()('(')
            HAXE_EXPRESSION_LIST
              HAXE_LITERAL_EXPRESSION
                PsiElement(LITSTRING)('"Debug infos for all debug compiles"')
            PsiElement())(')')
          PsiElement(;)(';')
          PsiComment(#end)('#end')
          PsiElement(})('}')
    PsiElement(})('}')