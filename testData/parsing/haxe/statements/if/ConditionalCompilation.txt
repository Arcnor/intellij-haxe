haXe File
  PsiComment(#if)('#if flash8\n// Haxe code specific for flash player 8\n#elseif flash\n// Haxe code specific for flash platform (any version)\n#elseif js\n// Haxe code specific for javascript plaform\n#else')
  PsiComment(MSL_COMMENT)('// do something else')
  PsiComment(#error)('#error // will display an error "Not implemented on this platform"\n  #error "Custom error message" ')
  PsiComment(MSL_COMMENT)('// will display an error "Custom error message"')
  PsiComment(#end)('#end')
  PsiComment(#if)('#if mydebug\n')
  HAXE_CLASSDECLARATION
    PsiElement(class)('class')
    HAXE_COMPONENTNAME
      HAXE_IDENTIFIER
        PsiElement(ID)('Crazy')
    PsiElement({)('{')
    PsiComment(#else)('#else\n  interface Crazy {\n  #end')
    PsiComment(MSL_COMMENT)('// yep')
    HAXE_CLASSBODY
      <empty list>
    PsiElement(})('}')
  HAXE_CLASSDECLARATION
    PsiElement(class)('class')
    HAXE_COMPONENTNAME
      HAXE_IDENTIFIER
        PsiElement(ID)('ConditionalCompilation')
    PsiElement({)('{')
    PsiComment(#if)('#if !debug ')
    HAXE_CLASSBODY
      HAXE_FUNCTIONDECLARATIONWITHATTRIBUTES
        HAXE_DECLARATIONATTRIBUTELIST
          HAXE_DECLARATIONATTRIBUTE
            PsiElement(inline)('inline')
          PsiComment(#end)('#end')
          HAXE_DECLARATIONATTRIBUTE
            HAXE_ACCESS
              PsiElement(public)('public')
        PsiElement(function)('function')
        HAXE_COMPONENTNAME
          HAXE_IDENTIFIER
            PsiElement(ID)('abc')
        PsiElement(()('(')
        PsiElement())(')')
        HAXE_BLOCKSTATEMENT
          PsiElement({)('{')
          PsiElement(})('}')
    PsiElement(})('}')
  PsiComment(#if)('#if (neko && mydebug)\n')
  HAXE_CLASSDECLARATION
    PsiElement(class)('class')
    HAXE_COMPONENTNAME
      HAXE_IDENTIFIER
        PsiElement(ID)('FooNeko')
    PsiElement({)('{')
    HAXE_CLASSBODY
      <empty list>
    PsiElement(})('}')
  PsiComment(MSL_COMMENT)('// Only for "mydebug" mode on Neko')
  PsiComment(#end)('#end')
  PsiComment(#if)('#if (flash || php)\n// Code that works for either flash or PHP\nclass FooFlash {\n\n}\n#end')
  PsiComment(#if)('#if (neko && mydebug)\n')
  HAXE_TYPEDEFDECLARATION
    PsiElement(typedef)('typedef')
    HAXE_COMPONENTNAME
      HAXE_IDENTIFIER
        PsiElement(ID)('Vector')
    PsiElement(=)('=')
    HAXE_TYPEORANONYMOUS
      HAXE_TYPE
        HAXE_REFERENCEEXPRESSION
          HAXE_REFERENCEEXPRESSION
            HAXE_REFERENCEEXPRESSION
              HAXE_IDENTIFIER
                PsiElement(ID)('com')
            PsiElement(.)('.')
            HAXE_REFERENCEEXPRESSION
              HAXE_IDENTIFIER
                PsiElement(ID)('foo')
          PsiElement(.)('.')
          HAXE_REFERENCEEXPRESSION
            HAXE_IDENTIFIER
              PsiElement(ID)('SuperArray')
    PsiElement(;)(';')
  PsiComment(MSL_COMMENT)('// Only for "mydebug" mode on Neko')
  PsiComment(#end)('#end')
  HAXE_CLASSDECLARATION
    PsiElement(class)('class')
    HAXE_COMPONENTNAME
      HAXE_IDENTIFIER
        PsiElement(ID)('ConditionalCompilation')
    PsiElement({)('{')
    HAXE_CLASSBODY
      HAXE_FUNCTIONDECLARATIONWITHATTRIBUTES
        PsiElement(function)('function')
        HAXE_COMPONENTNAME
          HAXE_IDENTIFIER
            PsiElement(ID)('foo')
        PsiElement(()('(')
        PsiElement())(')')
        HAXE_BLOCKSTATEMENT
          PsiElement({)('{')
          PsiComment(#if)('#if (neko && php) || (neko && mydebug)\n    ')
          HAXE_CALLEXPRESSION
            HAXE_REFERENCEEXPRESSION
              HAXE_IDENTIFIER
                PsiElement(ID)('trace')
            PsiElement(()('(')
            HAXE_EXPRESSIONLIST
              HAXE_LITERALEXPRESSION
                PsiElement(LITSTRING)('"Debug infos for all debug compiles"')
            PsiElement())(')')
          PsiElement(;)(';')
          PsiComment(#end)('#end')
          PsiElement(})('}')
    PsiElement(})('}')